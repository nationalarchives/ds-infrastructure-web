#!/bin/bash

# Update yum
sudo yum update -y
sudo dnf update

# create swap file
sudo /bin/dd if=/dev/zero of=/var/swap.1 bs=1M count=1024
sudo chmod 0600 /var/swap.1
sudo /sbin/mkswap /var/swap.1
sudo /sbin/swapon /var/swap.1

# Install Cloudwatch agent
sudo dnf install amazon-cloudwatch-agent -y
#sudo yum install amazon-cloudwatch-agent -y
sudo dnf install collectd -y
sudo aws s3 cp s3://{{ s3_deployment_bucket }}/{{ service }}/cloudwatch/cloudwatch-agent-config.json /opt/aws/amazon-cloudwatch-agent/bin/config.json
sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c file:/opt/aws/amazon-cloudwatch-agent/bin/config.json

sudo dnf install docker -y

sudo dnf -y install wget

# install docker-compose
sudo curl -s https://api.github.com/repos/docker/compose/releases/latest \
  | grep browser_download_url \
  | grep docker-compose-linux-x86_64 \
  | cut -d '"' -f 4 \
  | sudo wget -qi -
sudo chmod +x docker-compose-linux-x86_64
sudo mv docker-compose-linux-x86_64 /usr/local/bin/docker-compose

sudo systemctl enable docker
sudo systemctl start docker

## TODO
## create a script checking theconnection to database and if docker is running
## on error send notification

# set environment variables
echo 'export TRAEFIK_IMAGE="none"' |tee -a /etc/environment
echo 'export WEBSERVER_IMAGE="none"' | tee -a /etc/environment
sudo source /etc/environment

cat << EOF > /var/finish-init.txt
[status]
finished = true
EOF
