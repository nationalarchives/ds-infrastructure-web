name: Deploy to develop

on:
  push:
    branches:
      - main
    paths:
      - config/develop.json
  workflow_dispatch:

permissions:
  id-token: write

concurrency:
  group: deploy-develop

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: develop
      url: https://dev-www.nationalarchives.gov.uk/
    strategy:
      matrix:
        service:
          - frontend
    steps:
      - uses: actions/checkout@v4
      - name: Deploy service
        uses: ./.github/actions/deploy
        with:
          config-file: develop.json
          service-name: ${{ matrix.service }}
          aws-role: arn:aws:iam::846769538626:role/GithubOIDCProviderIAMRolePermissions-Role-I80RXHT6O1PL
          parameter-path: /application/web/${{ matrix.service }}/docker_images

      - name: Update deployed version in parameter store
        run: |
          IMAGE_TAG=$(aws ssm get-parameter --name "/application/web/${{ matrix.service}}/docker_images" --query "Parameter.Value" --output text)
          aws ssm put-parameter --name "/application/web/${{ matrix.service}}/deployed_version" --value "$IMAGE_TAG" --type "String" --overwrite
        env:
          AWS_REGION: eu-west-2

      - name: Verify Deployment
        run: |
          IMAGE_TAG=$(aws ssm get-parameter --name "/application/web/${{ matrix.service}}/docker_images" --query "Parameter.Value" --output text)
          
          for i in {1..10}; do
          DEPLOYED_VERSION=$(aws ssm get-parameter --name "/application/web/${{ matrix.service}}/deployed_version" --query "Parameter.Value" --output text || echo "No version found")

          if [["$DEPLOYED_VERSION" == "$IMAGE_TAG" ]]; then
            echo "  ✅ Deployment successful! Version: $DEPLOYED_VERSION"
            exit 0
          fi
            echo "  ⏳ Waiting for deployment to complete... Checking again in 10 seconds."
            sleep 10
          done

          echo "  ❌ Deployment verification failed. The deployment version did not update in time"
          exit 1
        env:
          AWS_REGION: eu-west-2
          
          
          


  # test:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - deploy
  #   env:
  #     GH_TOKEN: ${{ secrets.ACTIONS_GITHUB_TOKEN_TEST_RUNNER }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Run tests
  #       run: gh workflow run manual.yml --repo nationalarchives/ds-tna-website-tests --raw-field domain=https://dev-www.nationalarchives.gov.uk --raw-field notify-slack=true --raw-field description="$(git log -1 --pretty=%B | sed '/./,$!d' | sed '/^$/d' | sed 's/^/> /')"

       