name: Update Frontend Image Version

permissions:
  id-token: write
  contents: write

on:
  workflow_dispatch:
    inputs:
      deploy-environment:
        type: choice
        description: "Choose Environment"
        required: true
        default: "dev"
        options:
          - dev
          - staging
          - live
      image-version:
        type: string
        description: "Frontend Image Version"
        required: true

jobs:
  update-frontend-image:
    runs-on: ubuntu-latest
    steps:
      - name: Set Account and Role based on Environment
        id: set_env_details
        run: |
          if [ "${{ inputs.deploy-environment }}" == "dev" ]; then
            echo "account_id=846769538626" >> $GITHUB_ENV
            echo "role_to_assume=arn:aws:iam::846769538626:role/GithubOIDCProviderIAMRolePermissions-Role-I80RXHT6O1PL" >> $GITHUB_ENV
            echo "parameter_path=/application/web/frontend/docker_images" >> $GITHUB_ENV
          elif [ "${{ inputs.deploy-environment }}" == "staging" ]; then
            echo "account_id=337670467269" >> $GITHUB_ENV
            echo "role_to_assume=arn:aws:iam::337670467269:role/GitHubActionRole" >> $GITHUB_ENV
            echo "parameter_path=/application/web/frontend/docker_images" >> $GITHUB_ENV
          elif [ "${{ inputs.deploy-environment }}" == "live" ]; then
            echo "account_id=968803923593" >> $GITHUB_ENV
            echo "role_to_assume=arn:aws:iam::968803923593:role/github-oidc-Role-1QSZDDE2NZQV0" >> $GITHUB_ENV
            echo "parameter_path=/application/web/frontend/docker_images" >> $GITHUB_ENV
          fi

      - name: Checkout the Code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: eu-west-2
          role-to-assume: "${{ env.role_to_assume }}"
          role-session-name: GitHubActionsSession

      - name: Get Frontend Image Version from Config File
        id: get_version
        run: |
          echo "Fetching frontend version from config/${{ inputs.deploy-environment }}.json"
          version=$(jq -r '.services.frontend.version' config/${{ inputs.deploy-environment }}.json)
          echo "version=${version}" >> $GITHUB_ENV

      - name: Update Frontend Image Version in Parameter Store
        run: |
          echo "Updating frontend image version in AWS Parameter Store for environment: ${{ inputs.deploy-environment }} and version: ${{ env.version }}"
          aws ssm put-parameter \
            --name "${{ env.parameter_path }}" \
            --value "ghcr.io/nationalarchives/ds-frontend:${{ env.version }}" \
            --type "String" \
            --overwrite